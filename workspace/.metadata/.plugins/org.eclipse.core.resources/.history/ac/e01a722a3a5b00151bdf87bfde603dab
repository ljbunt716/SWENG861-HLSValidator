package validators;

import java.io.FileNotFoundException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import common.CommonFile;
import common.CommonString;
import hlsfiles.HLSDirectory;
import hlsfiles.HLSFile;

//Validates the number of files in Directory = Number of Files listed in File
public class FileExistsValidator extends Validator {

	public FileExistsValidator(HLSFile file) {
		File = file;
	}

	public Boolean IsValid() {
		Boolean isValidFile = true;
		for (String lowerLevelFile : File.LowerLevelFiles) {
			if (!DoesFileExist(File.Directory.DirectoryPath, lowerLevelFile)) {
				AddValidationError("File is missing from Directory: " + lowerLevelFile, "File Type Validation");
				isValidFile = false;
			}
		}

		return isValidFile;

		/*
		 * List<String> missingFiles = new ArrayList<>(File.LowerLevelFiles);
		 * missingFiles.removeAll(File.Directory.FileNames);
		 * 
		 * if (missingFiles.size() > 0) { AddValidationError(
		 * "Files are missing from Directory: " +
		 * CommonString.GetCommaSeparatedString(missingFiles),
		 * "File Type Validation"); return false; } else { return true; }
		 */
	}

	public Boolean DoesFileExist(String directory, String fileName) {

		try {

			URL url = new URL(CommonFile.PathCombine(directory, fileName));
			System.out.println(url);
			// url = new URL("ftp://ftp1.freebsd.org/pub/FreeBSD123/");//this
			// will fail

			InputStream input = url.openStream();

			System.out.println("SUCCESS");
			return true;
		} catch (UnknownHostException uhe) {
			System.out.println("uhe");
		} catch (FileNotFoundException fnfe) {
			System.out.println("fnfe");
		} catch (Exception e) {
			System.out.println("e");
		}
		return false;
	}

}
