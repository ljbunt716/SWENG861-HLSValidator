package hlsfiles;

import java.io.File;
import java.net.MalformedURLException;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.List;

public class HLSDirectory {
	public String DirectoryPath;
	// public List<File> Files;
	public List<HLSFile> Files;
	// public List<String> FileNames;

	public HLSDirectory() {
		// Files = new ArrayList<File>();
		Files = new ArrayList<HLSFile>();
		// FileNames = new ArrayList<String>();
	}

	public HLSDirectory(String directoryPath) {
		this();
		DirectoryPath = GetFileDirectoryPath(directoryPath);

		File[] files = new File(DirectoryPath).listFiles();

		if (files != null) {
			for (File file : files) {
				if (file.isFile()) {
					try {
						System.out.println(file.getName());
						Files.add(new HLSFile(file.toURI().toURL()));
					} catch (MalformedURLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (URISyntaxException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					// FileNames.add(file.getName());
				}
			}
		}
	}

	// Returns the Directory Path based on the URL provided in order to get
	// Files in Directory
	private String GetFileDirectoryPath(String directoryPath) {
		// If path is from file...
		if (directoryPath.contains("file:/"))
			return directoryPath.substring(6);
		else// If path is from URL
			return directoryPath;
	}
}
