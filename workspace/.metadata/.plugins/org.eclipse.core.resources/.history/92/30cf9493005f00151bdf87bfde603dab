package validators;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URI;
import java.net.URL;
import java.net.URLConnection;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import common.CommonFile;
import common.CommonString;
import hlsfiles.HLSDirectory;
import hlsfiles.HLSFileType;
import hlsfiles.HLSFileWDirectory;

//Validates the number of files in Directory = Number of Files listed in File
public class FileExistsValidator extends Validator {

	public FileExistsValidator(HLSFileWDirectory file) {
		File = file;
	}

	public void Validate() {
		for (String lowerLevelFile : File.LowerLevelFiles) {
			System.out.println(File.Directory.DirectoryPath);
			System.out.println(lowerLevelFile);
			if (!DoesFileExist(File.Directory.DirectoryPath, lowerLevelFile, File.Type)) {
				System.out.println("d");
				AddValidationError("File is missing from Directory: " + lowerLevelFile, "File Type Validation");
			}
		}
	}

	public Boolean DoesFileExist(String directory, String fileName, HLSFileType.Type type) {

		String pathName = CommonFile.PathCombine(directory, fileName);

		try {
			if (type.equals(HLSFileType.Type.URL)) {
				// Process as URL
				URL url = new URL(pathName.replace("\\", "//"));
				HttpURLConnection.setFollowRedirects(false);
				HttpURLConnection con = (HttpURLConnection) url.openConnection();
				con.setRequestMethod("HEAD");

				return (con.getResponseCode() == HttpURLConnection.HTTP_OK);
			} else {
				// Process as a File
				java.io.File f = new java.io.File(pathName);
				return (f.exists() && !f.isDirectory());
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return false;
	}

}
