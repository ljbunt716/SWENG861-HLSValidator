package validators;

import java.net.HttpURLConnection;
import java.net.URL;
import common.CommonFile;
import hlsfiles.HLSDirectory;
import hlsfiles.HLSFile;
import hlsfiles.HLSFileType;
import hlsfiles.HLSFileWDirectory;

//Validates the number of files in Directory = Number of Files listed in File
public class FileExistsValidator extends Validator {

	public FileExistsValidator(HLSFileWDirectory file) {
		File = file;
	}

	public void Validate() {
		for (String lowerLevelFile : File.LowerLevelFiles) {
			if (!DoesFileExist(File.Directory.DirectoryPath, lowerLevelFile, File.Type)) {
				System.out.println(lowerLevelFile);
				super.AddValidationError("File is missing from Directory: " + lowerLevelFile, "File Exists Validation");
			}
		}
	}

	public Boolean DoesFileExist(String directory, String fileName, HLSFileType.Type type) {

		String pathName = CommonFile.PathCombine(directory, fileName);
		return DoesFileExist(pathName, type);
	}

	public static Boolean DoesFileExist(String pathName) {
		HLSFileType.Type type = HLSFileType.GetFileType(pathName);
		return DoesFileExist(pathName, type);
	}

	public static Boolean DoesFileExist(String pathName, HLSFileType.Type type) {
		pathName = HLSDirectory.GetFileDirectoryPath(pathName, type);
		try {
			if (type.equals(HLSFileType.Type.URL)) {
				// Process as URL
				URL url = new URL(pathName.replace("\\", "//"));
				HttpURLConnection.setFollowRedirects(false);
				HttpURLConnection con = (HttpURLConnection) url.openConnection();
				con.setRequestMethod("HEAD");

				return (con.getResponseCode() == HttpURLConnection.HTTP_OK);
			} else {
				// Process as a File
				java.io.File f = new java.io.File(pathName);
				return (f.exists() && !f.isDirectory());
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return false;
	}

}
