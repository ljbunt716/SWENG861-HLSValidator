package validators.EXTINF;

import java.util.Arrays;
import java.util.List;

import common.CommonFloat;
import common.CommonInteger;
import hlsfiles.HLSFileWDirectory;
import validators.Validator;

//Duration is a decimal-integer or decimal-floating-point number
// Always use floating point EXTINF durations (supported in protocol version 3).
public class ValidateEXTINFValueValidator extends Validator {

	public ValidateEXTINFValueValidator(HLSFileWDirectory file) {
		File = file;
	}

	public void Validate() {
		int lineNumber = 0;

		try {
			List<String> allLinesInFile = Arrays.asList(File.HLSText.split("\\n"));
			int extinfValue = EXTINFValidator.GetEXTINFValue(allLinesInFile);

			for (String line : allLinesInFile) {
				lineNumber++;
				if (line.startsWith("#EXTINF")) {
					String value = line.substring(line.indexOf("#EXTINF:") + 8, line.indexOf(","));// +8
																									// to
																									// remove
																									// #EXTINF:
					System.out.println(File.FileName);
					System.out.println(extinfValue);
					System.out.println(value);

					// Validate value is either Integer or Float
					// Files with Version # < 3 MUST be integer
					if (extinfValue < 3)
						if (!CommonInteger.tryParse(value))
							AddErrorMessage(lineNumber, value);
						else if (extinfValue >= 3)
							if (!CommonFloat.tryParse(value) || CommonInteger.tryParse(value))
								AddErrorMessage(lineNumber, value);
				}
			}
		} catch (Exception e) {
			super.AddValidationError("#EXTINF: has invalid Duration Value: ",
					"Invalid #EXTINF Duration Value Validation");
		}
	}

	private void AddErrorMessage(int lineNumber, String value) {
		super.AddValidationError("#EXTINF: has invalid Duration Value - " + value + ".",
				"Invalid #EXTINF Duration Value Validation", lineNumber);
	}
}
